{
  "name": "Restful-bulksms",
  "tagline": "Fully Restful Bulksms Api with MongoDb",
  "body": "_# I cashed out on this project,As it's not my primary business,guess I just had to share ..=D =D_\r\n\r\n# # just run the following ,Homie :\r\n\r\nin Root folder of project,type:\r\n\r\n1.**gradle build**\r\n\r\n2.find application.properties file in src/main/java/resources/ folder\r\nedit this to suit the url of your mongo installation\r\n\r\n3.**gradle bootRun**\r\n\r\nu can then access the endpoints from **localhost:8080/**\r\nyou can insert a userName and password in your MongoDb with\r\n **db.getCollection('GeneralUserDoc').find({\"userName\":\"r2\",\"password\":\"222\"})**\r\n\r\nafterwards,for eg,to authenticate,just post **{\"userName\":\"r2\",\"password\":\"222\"}** to\r\n**localhost:8080/auth** with consumes header of **application/json**.\r\n\r\n`public OutgoingPayload createMultipleGroupContacts(BulkGroupContactsCreationRequest bulkGroupContactsCreationRequest) {\r\n        log.info(\"Create Multiple GroupContact Request aka Upload Multiple Contacts  : {}\", g.toJson(bulkGroupContactsCreationRequest));\r\n        OutgoingPayload outgoingPayload;\r\n\r\n        String groupId = bulkGroupContactsCreationRequest.getGroupId();\r\n        String userName = bulkGroupContactsCreationRequest.getUserName();\r\n        List<GroupContactsDoc> iterableGroupContacts = bulkGroupContactsCreationRequest.getContactsList();\r\n        log.info(\"Raw contacts List number before duplicate numbers removed = \" + iterableGroupContacts.size());\r\n\r\n        List<GroupContactsDoc> newlySetGroupIdAndUserNameContactsDoc = new ArrayList<>(0);\r\n\r\n        //set groupId and userName for each since user will not set GroupId with each contact List element\r\n        for (GroupContactsDoc groupContactsDocElement : iterableGroupContacts) {\r\n            groupContactsDocElement.setGroupId(groupId);\r\n            groupContactsDocElement.setUserName(userName);\r\n            newlySetGroupIdAndUserNameContactsDoc.add(groupContactsDocElement);\r\n        }\r\n        log.info(\"Newly sorted list,with set groupId and Username = \" + newlySetGroupIdAndUserNameContactsDoc.size());\r\n        //sort and remove duplicates Initial\r\n        List<GroupContactsDoc> removeInitialDuplicates = removeDuplicateContactsInitial(newlySetGroupIdAndUserNameContactsDoc);\r\n        log.info(\"Newly sorted List with Duplicates Removed Stage1 = \" + removeInitialDuplicates.size() + \" contacts\");\r\n\r\n        List<GroupContactsDoc> groupContactsDocListFinallySaved =\r\n                removeDuplicatesFromIncomingListByCheckingDBListAndSave(removeInitialDuplicates);\r\n        int noOfSavedContacts = groupContactsDocListFinallySaved.size();\r\n        log.info(\"no of final list saved in db = \" + noOfSavedContacts);\r\n\r\n        if (noOfSavedContacts == 0) {\r\n            outgoingPayload = new SuccessfulOutgoingPayload(\"Nothing was saved because the contacts exist already\", null);\r\n        } else {\r\n            outgoingPayload = new SuccessfulOutgoingPayload(noOfSavedContacts + \" saved Successfully\");\r\n        }\r\n\r\n\r\n        return outgoingPayload;\r\n    }`\r\n_Now have fun confusing yourself....Regards!!_\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}